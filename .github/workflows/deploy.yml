name: Build and Deploy to Self-Hosted Server

on:
  push:
    branches: [ "development" ]

env:
  PROJECT_ID: sweetflags
  IMAGE: sweetflags
  API_IMAGE: sweetflags-api
  UI_IMAGE: sweetflags-ui
  API_DEPLOYMENT_NAME: sweetflags-api
  UI_DEPLOYMENT_NAME: sweetflags-ui

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: self-hosted
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Build the API image
    - name: Build API
      run: |-
        docker build \
          --tag "localhost:5000/${PROJECT_ID}/${API_IMAGE}:${GITHUB_SHA}" \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          --build-arg GITHUB_REF="${GITHUB_REF}" \
          sweetflags-api/

    # Push the API image to registry
    - name: Publish API
      run: |-
        docker push "localhost:5000/${PROJECT_ID}/${API_IMAGE}:${GITHUB_SHA}"

    # Deploy the API image to server
    - name: Deploy API
      run: |-
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull localhost:5000/${PROJECT_ID}/${API_IMAGE}:${GITHUB_SHA} && docker stop ${API_DEPLOYMENT_NAME} || true && docker rm ${API_DEPLOYMENT_NAME} || true && docker run -d --name ${API_DEPLOYMENT_NAME} localhost:5000/${PROJECT_ID}/${API_IMAGE}:${GITHUB_SHA}"

    # Build the UI image
    - name: Build UI
      run: |-
        docker build \
          --tag "localhost:5000/${PROJECT_ID}/${UI_IMAGE}:${GITHUB_SHA}" \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          --build-arg GITHUB_REF="${GITHUB_REF}" \
          sweetflags-ui/

    # Push the UI image to registry
    - name: Publish UI
      run: |-
        docker push "localhost:5000/${PROJECT_ID}/${UI_IMAGE}:${GITHUB_SHA}"
    
    # Deploy the UI image to server
    - name: Deploy UI
      run: |-
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull localhost:5000/${PROJECT_ID}/${UI_IMAGE}:${GITHUB_SHA} && docker stop ${UI_DEPLOYMENT_NAME} || true && docker rm ${UI_DEPLOYMENT_NAME} || true && docker run -d --name ${UI_DEPLOYMENT_NAME} localhost:5000/${PROJECT_ID}/${UI_IMAGE}:${GITHUB_SHA}"
